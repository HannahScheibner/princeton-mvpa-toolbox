= Instructions for committing changes to the SVN development version =

If you're on the list of project committers, then you can edit, add or delete code, and commit your changes to the main SVN development version. You can also edit the wiki pages to update them with relevant tweaks from the code.

You can see the list of committers in the right-hand sidebar of the main page:

http://code.google.com/p/princeton-mvpa-toolbox/

== Types of Commits ==

There are two different main types of commits that we can expect at any given time, as we don't currently branch the code.  These being updates for existing code and new code.

=== New Functionality and Utility Scripts ===

If your adding new functionality to the system it's a fairly smooth slope.  First make sure your inserting it into an appropriate location in the overall code structure.  It would generally be more appropriate to include these additions in the 'contrib' folder unless your performing core development.  However if you are generating a new sub toolbox (ie. afni_matlab, boosting and the like) are large enough in their own right and anything of similar scale should be contributed as it's own sub folder of functions.

If your adding any new functionality it would be of great value to include with your work a series of proofing unit tests.  While it's not expected that these be perfect (as that is impossible) it would be excellent to confirm all the major behaviors of the function (and any discernible edge cases) to make sure the function is performing as desired. This will also allow us to modify and update these functions without breaking the known working functionality.

It would also be advisable to include a clear description at the top of the file describing exactly what your intended behavior for the functionality is.  This will help with referencing and improve the overall documentation of the code.

=== Modification of Existing Scripts ===

 * If it's a modification, it's worth exercising some caution. I've been reluctant to ever modify the way the code works, since there are now many users, and few of them will read the changelog or the mailing list or the documentation to see that things work differently. So, instead, I strongly suggest that you leave the defaults as they are, and add an optional argument to activate the new way of doing things. Definitely worth sending out an email to the mailing list for this.


== Other things ==

 * Every so often, we'll take the latest development version, and sanction it as an official release (usually after we've added major new functionality, or if it feels as though enough small changes have accumulated)

 * Feel free to improve any of the wiki documentation, especially if you add new stuff.  Also make sure to put the unit tests in place.